Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table =10000
iii. Category table =10000
iv. Checkin table =10000
v. elite_years table =10000
vi. friend table = 10000
vii. hours table =10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table =10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 (Primary Keys: id)
ii. Hours = 1562 (Foreign keys: business_id)
iii. Category = 2643 (Foreign keys: business_id)
iv. Attribute = 1115 (Foreign keys: business_id)
v. Review = 10000 (Primary Keys: id), 9581(Foreign keys: user_id), 8090 (Foreign keys: business_id)
vi. Checkin = 493 (Foreign keys: business_id)
vii. Photo = 10000 (Primary Keys: id), 6493 (Foreign keys: business_id)
viii. Tip = 537 (Foreign keys: user_id), 3979 (Foreign keys: business_id)
ix. User = 10000 (Primary Keys: id)
x. Friend = 11 (Foreign keys: user_id)
xi. Elite_years = 2780 (Foreign keys: user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:

select name, review_count, yelping_since, useful,funny, cool,fans, average_stars,compliment_hot,compliment_more, compliment_profile,compliment_cute,compliment_list,compliment_note,compliment_plain,compliment_cool,compliment_funny,compliment_writer,compliment_photos
from user 
where name is null or review_count is null or average_stars is null or compliment_list is null or compliment_plain is null or compliment_funny is null or compliment_writer is null or compliment_photos is null or yelping_since is null or compliment_hot is null or compliment_note is null or compliment_cool is null or useful is null or compliment_more is null or funny is null or compliment_profile is null or cool is null or fans is null or compliment_cute is null

	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1.0		max:5.0		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000		avg:24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
select city, sum(review_count)
from business 
group by city
order by sum(review_count) desc
	
	
	Copy and Paste the Result Below:
+-----------------+-------------------+
| city            | sum(review_count) |
+-----------------+-------------------+
| Las Vegas       |             82854 |
| Phoenix         |             34503 |
| Toronto         |             24113 |
| Scottsdale      |             20614 |
| Charlotte       |             12523 |
| Henderson       |             10871 |
| Tempe           |             10504 |
| Pittsburgh      |              9798 |
| Montréal        |              9448 |
| Chandler        |              8112 |
| Mesa            |              6875 |
| Gilbert         |              6380 |
| Cleveland       |              5593 |
| Madison         |              5265 |
| Glendale        |              4406 |
| Mississauga     |              3814 |
| Edinburgh       |              2792 |
| Peoria          |              2624 |
| North Las Vegas |              2438 |
| Markham         |              2352 |
| Champaign       |              2029 |
| Stuttgart       |              1849 |
| Surprise        |              1520 |
| Lakewood        |              1465 |
| Goodyear        |              1155 |
+-----------------+-------------------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
select stars, count(stars)
from business
where city='Avon'
group by stars;

Copy and Paste the Resulting Table Below (2 columns 鈥� star rating and count):
+-------+-------------------+
| stars | count(stars) |
+-------+-------------------+
|   1.5 |                 1 |
|   2.5 |                 2 |
|   3.5 |                 3 |
|   4.0 |                 2 |
|   4.5 |                 1 |
|   5.0 |                 1 |
+-------+------------------+

ii. Beachwood

SQL code used to arrive at answer:
select stars, count(stars)
from business
where city='Beachwood'
group by stars;

Copy and Paste the Resulting Table Below (2 columns 鈥� star rating and count):
		
+-------+------------------+
| stars | count(stars) |
+-------+------------------+
|   2.0 |                1 |
|   2.5 |                1 |
|   3.0 |                2 |
|   3.5 |                2 |
|   4.0 |                1 |
|   4.5 |                2 |
|   5.0 |                5 |
+-------+------------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
select id, name, review_count
from user
order by review_count desc
limit 3
		
	Copy and Paste the Result Below:

+----------------------------------------+-----------+------------------+
| id                                          | name   | review_count |		
+----------------------------------------+-----------+------------------+
| -G7Zkl1wIWBBmD0KRy_sCw  | Gerald |             2000 |
| -3s52C4zL_DHRK0ULG6qtg    | Sara    |             1629 |
| -8lbUNlXVSoXqaRRiHiSNg      | Yuri     |             1339 |
+----------------------------------------+-----------+---------=--------+

8. Does posing more reviews correlate with more fans? Not really.

	Please explain your findings and interpretation of the results:

select review_count,fans
from user
order by review_count desc;

select review_count,fans
from user
order by fans desc;

According to the expression above, the user who has the maximum review_count doesn't own the most fans. The number of the review_count (2000) is around 8 times more than the number of the fans(253). However, the user who has the most fans(503) only has 609 pieces of reviews.

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: No, there more reviews with the word "love" than with the word "hate" in them.

	
	SQL code used to arrive at answer:
select count(text)
from review
where text like '%love%' ;
+-------------+
| count(text) |
+-------------+
|        2825 |
+-------------+
select count(text)
from review
where text like '%hate%' ;
+-------------+
| count(text) |
+-------------+
|         232 |
+-------------+
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
select id, sum(fans)
from user
group by id
order by sum(fans) desc
limit 10; 	

	Copy and Paste the Result Below:
+-----------------------------------------+-------------+
| id                                          | sum(fans) |
+----------------------------------------+--------------+
| -9I98YbNQnLdAmcYfb324Q   |          503 |
| -8EnCioUmDygAbsYZmTeRQ  |          497 |
| --2vR0DIsmQ6WfcSzKWigw    |          311 |
| -G7Zkl1wIWBBmD0KRy_sCw |          253 |
| -0IiMAZI2SsQ7VmyzJjokQ     |          173 |
| -g3XIcCb2b-BD0QBCcq2Sw   |          159 |
| -9bbDysuiWeo2VShFJJtcw    |          133 |
| -FZBTkAZEXoP7CYvRV2ZwQ |          126 |
| -9da1xk7zgnnfO1uTVYGkA    |          124 |
| -lh59ko3dxChBSZ9U7LfUw    |          120 |
+----------------------------------------+--------------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
+-----------------+------------------------+
| city            | category               |
+-----------------+------------------------+
| Aurora        | Restaurants       |
select city, stars, review_count
from business
where city='Aurora'
group by stars;

select category,stars,review_count
from category
join business
    on category.business_id=business.id
where category='Restaurants' 
group by stars
	
i. Do the two groups you chose to analyze have a different distribution of hours? Yes
[City]
select hours
from hours
join business
on hours.business_id=business.id
where city='Aurora'
group by stars;
+-------------------------------+
| hours                         |
+-------------------------------+
| Saturday|11:30-14:00 |
+-------------------------------+
[Category]
select hours
from hours
join category using (business_id)
join business
    on category.business_id=business.id
where category='Restaurants' 
group by stars;
+--------------------------------+
| hours                          |
+--------------------------------+
| Saturday|11:00-23:00 |
| Saturday|11:00-3:00  |
| Saturday|10:00-1:00  |
| Saturday|11:30-14:00 |
| Saturday|6:00-15:00  |
| Saturday|16:00-2:00  |
| Saturday|10:30-22:00 |
+-------------------------------+
ii. Do the two groups you chose to analyze have a different number of reviews? Yes. 
    
[City]
select city, stars, sum(review_count)
from business
where city='Aurora'
group by stars;
+--------+-------+-------------------+
| city   | stars | sum(review_count) |
+--------+-------+-------------------+
| Aurora |   2.0 |                33 |
| Aurora |   2.5 |                21 |
| Aurora |   3.0 |                42 |
| Aurora |   3.5 |                79 |
| Aurora |   4.0 |                79 |
| Aurora |   4.5 |               137 |
| Aurora |   5.0 |                17 |
+--------+-------+-------------------+
[Category]
select category,stars, sum(review_count)
from category
join business
    on category.business_id=business.id
where category='Restaurants' 
group by stars;
+----------------+----------+------------------------+
| category       | stars | sum(review_count) |
+-----------------+-------+-----------------------------+
| Restaurants |   1.0 |                           4 |
| Restaurants |   1.5 |                          4 |
| Restaurants |   2.0 |                        20 |
| Restaurants |   2.5 |                        36 |
| Restaurants |   3.0 |                      665 |
| Restaurants |   3.5 |                      497 |
| Restaurants |   4.0 |                     2602 |
| Restaurants |   4.5 |                       405 |
| Restaurants |   5.0 |                       271 |
+-----------------+-------+--------------------------+
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
No. But the Restaurant-Category shows that some of the results are in the same city.
SQL code used for analysis:
[Aurora]
select category,stars,address,city
from business
join category 
    on category.business_id=business.id
where city='Aurora'
group by stars;
+------------------+-------+------------------------------------+--------+
| category        | stars | address                           | city   |
+------------------+-------+------------------------------------+--------+
| Restaurants |   3.5 | 96 Barrington Town Sq Dr | Aurora |
+------------------+-------+------------------------------------+--------+
[Restaurants]
select category,stars,address,city
from business
join category 
    on category.business_id=business.id
where category='Restaurants'
group by stars
+------------------+-------+---------------------------------------+-----------+
| category       | stars | address                                | city      |
+------------------+-------+----------------------------------------+-----------+
| Restaurants |   1.0 | 5725 Heisley Rd                   | Mentor    |
| Restaurants |   1.5 | 5 Northtown Way, Unit 7      | Toronto   |
| Restaurants |   2.0 | 389 Church Street               | Toronto   |
| Restaurants |   2.5 | 5500 S Mill Ave                   | Tempe      |
| Restaurants |   3.0 | 900 S Val Vista Dr              | Gilbert      |
| Restaurants |   3.5 | 105-109 Lothian Road        | Edinburgh |
| Restaurants |   4.0 | 30651 Detroit Rd                | Westlake   |
| Restaurants |   4.5 | 3480 S Maryland Pkwy        | Las Vegas |
| Restaurants |   5.0 | 1038 W Southern Ave, Ste 1| Mesa        |
+------------------+-------+--------------------------------------+---------------+		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
The average star rating of the ones that are still open is higher than the ones that are closed.         
         
ii. Difference 2:
The numbers of the reviews of the ones that are still open is more than the ones that are closed.             
       
         
SQL code used for analysis:
select count(id),avg(stars),count(review_count)
from business
group by is_open;

+-------------+----------------------+---------------------------+
| count(id) |          avg(stars) | count(review_count) |
+-------------+----------------------+---------------------------+
|      1520 | 3.52039473684 |                       1520 |
|      8480 | 3.67900943396 |                       8480 |
+-------------+----------------------+---------------------------+	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do: 
The correlation between the number of useful review and the the number of the fans of the user and group the result by stars from the Review Table.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
Extract data from Review Table and User Table. And the logical model between the two table is 1 to many, which means one user can have several reviews.
The data this analysis need includes stars from Review Table,useful from Review Table,and the sum of the fans of different user.           
iii. Output of your finished dataset:
+-------+--------+------------------------+
| stars | useful | sum(user.fans) |
+-------+--------+-------------------------+
|     4 |      1 |                      206 |
|     5 |      1 |                      183 |
|     2 |      0 |                        70 |
|     3 |      0 |                        53 |
|     1 |      0 |                        22 |
+-------+--------+-------------------------+
         
iv. Provide the SQL code you used to create your final dataset:
select stars,review.useful,sum(user.fans)
from user
join review 
    on review.user_id=user.id
group by stars
order by sum(user.fans) desc;